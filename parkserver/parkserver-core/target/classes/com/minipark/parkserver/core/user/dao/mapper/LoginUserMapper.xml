<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.minipark.parkserver.core.user.dao.LoginUserMapper" >
  <resultMap id="BaseResultMap" type="com.minipark.parkserver.core.user.entity.LoginUser" >
    <id column="user_id" property="userId" jdbcType="CHAR" />
    <result column="user_name" property="userName" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="CHAR" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, password, contacts, phone, user_type, create_time, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from login_user
    where user_id = #{userId,jdbcType=CHAR}
  </select>
  <select id="selectWithPage" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from login_user
    where status > 0
    <if test="userId != null and userId != ''" >
        and user_id = #{userId, jdbcType=CHAR}
    </if>
    <if test="userType != null and userType != ''" >
        and user_type = #{userType, jdbcType=CHAR}
    </if>
  </select>
  <select id="selectByParam" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from login_user
    where status > 0 and 
    <if test="userId != null and userId != ''" >
        user_id = #{userId, jdbcType=CHAR}
    </if>
    <if test="userName != null and userName != ''" >
        user_name = #{userName, jdbcType=CHAR}
    </if>
    <if test="password != null and password != ''" >
        password = #{password, jdbcType=VARCHAR}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from login_user
    where user_id = #{userId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.minipark.parkserver.core.user.entity.LoginUser" >
    insert into login_user (user_id, user_name, password, 
      contacts, phone, user_type, 
      create_time, status)
    values (#{userId,jdbcType=CHAR}, #{userName,jdbcType=CHAR}, #{password,jdbcType=VARCHAR}, 
      #{contacts,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, #{userType,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.minipark.parkserver.core.user.entity.LoginUser" >
    insert into login_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="contacts != null" >
        contacts,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null" >
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.minipark.parkserver.core.user.entity.LoginUser" >
    update login_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null" >
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.minipark.parkserver.core.user.entity.LoginUser" >
    update login_user
    set user_name = #{userName,jdbcType=CHAR},
      password = #{password,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      user_type = #{userType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=CHAR}
  </update>
</mapper>